@using Uco.Models;
@model Uco.Models.OutEmail

@{
    ViewBag.Title = Html.R("Newsletter");
    Layout = "~/Areas/Admin/Views/Shared/_LayoutNoTree.cshtml";
    List<string> newsletterAccountGroups = Model.NewsletterAccountGroups;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.LastTry)
    @Html.HiddenFor(model => model.TimesSent)
    <b style=" color:Red;">@ViewBag.Message</b>
    <fieldset>
        <legend>@Html.R("Newsletter")</legend>

        <div class="editor-label">
            @Html.R("SendTestMail")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MailTo)
            @Html.ValidationMessageFor(model => model.MailTo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>
        <!-- ===================================================================================================================================== -->
        <div>
            @if (newsletterAccountGroups != null)
            {
                <div class="non_selectable"
                     unselectable="on" onselectstart="return false;" onmousedown="return false;">
                    <span class="send_title">@Html.R("NewsletterAccountGroups")</span><span style="width: 40px !important;"></span>
                    @foreach (string newsletterAccountGroup in newsletterAccountGroups)
                    {
                        <span class="account_group_container">
                            <input type="checkbox" id="@newsletterAccountGroup" name="NewsletterAccountGroupsSelected" value="@newsletterAccountGroup" text="@newsletterAccountGroup" />
                            <label for="@newsletterAccountGroup">@newsletterAccountGroup</label>
                        </span>
                    }
                </div>
                <script type="text/javascript">
		      console.log("NewsletterAccountGroups array is not null");
                </script>
            }
        </div>
       <div class="demo-section k-content">

    <h4>תאריכי הרשמה:</h4>
	<h4>מ:</h4>
           <input id="start" name="DateFrom" />
    <h4>עד:</h4>
           <input id="end" name="DateTo" />
  
</div>
        <!-- ===================================================================================================================================== -->
        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>
        @Html.R("SendExplain")
        <p>
            <input type="submit" value="@Html.R("Send")" class="k-button" onclick="return confirm('האם אתה בטוח?')" />
        </p>
    </fieldset>
}
<script type="text/javascript">
		      console.log("Hello from newsletters");
</script>
<p>
    @Html.ActionLink(@Html.R("BackToList"), "Index")
</p>
<script>
  
    $(document).ready(function () {
        function startChange() {
            var startDate = start.value(),
            endDate = end.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        function endChange() {
            var endDate = end.value(),
            startDate = start.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        var start = $("#start").kendoDatePicker({
            change: startChange
        }).data("kendoDatePicker");

        var end = $("#end").kendoDatePicker({
            change: endChange
        }).data("kendoDatePicker");

        start.max(end.value());
        end.min(start.value());
    });
</script>