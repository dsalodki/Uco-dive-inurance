@{
    ViewBag.Title = RP.TVL("Title");
    Layout = "~/Areas/Admin/Views/Shared/_LayoutNoTree.cshtml";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm()) {
    <label for="startsWith">@RP.TVL("Search")</label>
    @Html.TextBox("SearchBox", "") 
    <button class="k-button k-state-default" type="submit">@RP.TVL("SearchButton")</button>
    @Html.ActionLink(RP.TVG("Cancel"), "Index", new { SearchBox = "" }, new { @class = "k-button k-state-default" })
}
<br />

@(Html.Kendo().Grid<Uco.Models.ShopProductPage>()
    .Name("Grid")
    .DataSource(dataSource =>
        dataSource.Ajax()
        .Model(model => { model.Id(item => item.ID); })
        .Read(r => r.Action("_AjaxIndex", "ShopProducts", new { SearchBox = ViewData["SearchBox"] as string }))
        .Destroy(r => r.Action("_AjaxDelete", "ShopProducts"))
        .PageSize(20)
    )
    .Columns(columns =>
    {
        columns.Bound(r => r.ID).Width(50);
        columns.Bound(r => r.Title);
        columns.Bound(r => r.ShopPrice);
        columns.Bound(r => r.ShopShowInStock).ClientTemplate("<#= ShopShowInStock ? '" + RP.TVL("Yes") + "' : '" + RP.TVL("No") + "' #>").Title(RP.TVL("Stock"));
        columns.Bound(r => r.ShopShowInSale).ClientTemplate("<#= ShopShowInSale ? '" + RP.TVL("Yes") + "' : '" + RP.TVL("No") + "' #>").Title(RP.TVL("Discount"));
        columns.Bound(r => r.ShowInProductsHomepage).ClientTemplate("<#= ShowInProductsHomepage ? '" + RP.TVL("Yes") + "' : '" + RP.TVL("No") + "' #>").Title(RP.TVL("Homepage"));
        columns.Bound(r => r.ShowInNewOnShelfHomepage).ClientTemplate("<#= ShowInNewOnShelfHomepage ? '" + RP.TVL("Yes") + "' : '" + RP.TVL("No") + "' #>").Title(RP.TVL("HomepageNewsProducts"));
        columns.Bound(r => r.ShopSKU);
        columns.Template(r => r.ID).ClientTemplate(
            "<a class='k-button' href='" + Url.Action("Edit", "ShopProducts") + "?ID=#= ID #'" + ">" + RP.TVG("Edit") + "</a>"
        ).Width(100);
        columns.Command(commands =>
        {
            commands.Destroy();
        })
        .Width(100);
    })
    .Pageable()
    .Sortable()
    .Filterable()
    .Groupable()
    //.ToolBar(commands => commands.Custom().Text(RP.TVG("Export")).Action("Export", "ShopProductImport"))
    //.ToolBar(commands => commands.Custom().Text(RP.TVG("Import")).Action("Import", "ShopProductImport"))
)
<br />
@Html.ActionLink(RP.TVG("Create"), "Create", null, new { @class = "k-button k-state-default" })
